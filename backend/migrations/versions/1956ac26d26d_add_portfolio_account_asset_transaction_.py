"""Add portfolio, account, asset, transaction, lot models

Revision ID: 1956ac26d26d
Revises: a97f6b545b46
Create Date: 2025-04-19 15:16:30.613405

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '1956ac26d26d'
down_revision = 'a97f6b545b46'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('assets',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('asset_type', sa.String(length=50), nullable=False),
    sa.Column('symbol', sa.String(length=30), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('currency', sa.String(length=3), nullable=False),
    sa.Column('exchange', sa.String(length=50), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('icon_url', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('assets', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_assets_asset_type'), ['asset_type'], unique=False)
        batch_op.create_index(batch_op.f('ix_assets_currency'), ['currency'], unique=False)
        batch_op.create_index(batch_op.f('ix_assets_exchange'), ['exchange'], unique=False)
        batch_op.create_index(batch_op.f('ix_assets_symbol'), ['symbol'], unique=False)

    op.create_table('bonds',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('issuer', sa.String(length=100), nullable=True),
    sa.Column('maturity_date', sa.Date(), nullable=True),
    sa.Column('coupon_rate', sa.Numeric(precision=8, scale=5), nullable=True),
    sa.Column('credit_rating', sa.String(length=10), nullable=True),
    sa.Column('bond_type', sa.String(length=50), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['assets.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('bonds', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_bonds_maturity_date'), ['maturity_date'], unique=False)

    op.create_table('cash_currencies',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['assets.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('cryptocurrencies',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('algorithm', sa.String(length=50), nullable=True),
    sa.Column('circulating_supply', sa.Numeric(precision=30, scale=8), nullable=True),
    sa.Column('max_supply', sa.Numeric(precision=30, scale=8), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['assets.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('etfs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('issuer', sa.String(length=100), nullable=True),
    sa.Column('expense_ratio', sa.Numeric(precision=6, scale=4), nullable=True),
    sa.Column('underlying_index', sa.String(length=100), nullable=True),
    sa.Column('asset_class', sa.String(length=50), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['assets.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('etfs', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_etfs_asset_class'), ['asset_class'], unique=False)

    op.create_table('option_contracts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('underlying_asset_id', sa.Integer(), nullable=False),
    sa.Column('option_type', sa.Enum('CALL', 'PUT', name='option_type_enum'), nullable=False),
    sa.Column('strike_price', sa.Numeric(precision=18, scale=8), nullable=False),
    sa.Column('expiration_date', sa.Date(), nullable=False),
    sa.Column('delta', sa.Numeric(precision=10, scale=8), nullable=True),
    sa.Column('gamma', sa.Numeric(precision=10, scale=8), nullable=True),
    sa.Column('theta', sa.Numeric(precision=10, scale=8), nullable=True),
    sa.Column('vega', sa.Numeric(precision=10, scale=8), nullable=True),
    sa.Column('implied_volatility', sa.Numeric(precision=10, scale=8), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['assets.id'], ),
    sa.ForeignKeyConstraint(['underlying_asset_id'], ['assets.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('option_contracts', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_option_contracts_expiration_date'), ['expiration_date'], unique=False)
        batch_op.create_index(batch_op.f('ix_option_contracts_underlying_asset_id'), ['underlying_asset_id'], unique=False)

    op.create_table('portfolios',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('base_currency', sa.String(length=3), nullable=False),
    sa.Column('benchmark_ticker', sa.String(length=20), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('portfolios', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_portfolios_base_currency'), ['base_currency'], unique=False)
        batch_op.create_index(batch_op.f('ix_portfolios_benchmark_ticker'), ['benchmark_ticker'], unique=False)
        batch_op.create_index(batch_op.f('ix_portfolios_user_id'), ['user_id'], unique=False)

    op.create_table('stocks',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('sector', sa.String(length=100), nullable=True),
    sa.Column('industry', sa.String(length=100), nullable=True),
    sa.Column('market_cap', sa.Numeric(precision=20, scale=2), nullable=True),
    sa.Column('country', sa.String(length=50), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['assets.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('stocks', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_stocks_country'), ['country'], unique=False)
        batch_op.create_index(batch_op.f('ix_stocks_sector'), ['sector'], unique=False)

    op.create_table('accounts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('account_type', sa.String(length=50), nullable=False),
    sa.Column('custodian', sa.String(length=100), nullable=True),
    sa.Column('account_number_masked', sa.String(length=20), nullable=True),
    sa.Column('currency', sa.String(length=3), nullable=False),
    sa.Column('cash_balance', sa.Numeric(precision=18, scale=8), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('last_synced_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('portfolio_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['portfolio_id'], ['portfolios.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('accounts', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_accounts_account_type'), ['account_type'], unique=False)
        batch_op.create_index(batch_op.f('ix_accounts_currency'), ['currency'], unique=False)
        batch_op.create_index(batch_op.f('ix_accounts_is_active'), ['is_active'], unique=False)
        batch_op.create_index(batch_op.f('ix_accounts_portfolio_id'), ['portfolio_id'], unique=False)

    op.create_table('transactions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('account_id', sa.Integer(), nullable=False),
    sa.Column('asset_id', sa.Integer(), nullable=True),
    sa.Column('transaction_type', sa.Enum('BUY', 'SELL', 'DIVIDEND_CASH', 'DIVIDEND_STOCK', 'INTEREST', 'FEE', 'COMMISSION', 'DEPOSIT', 'WITHDRAWAL', 'STOCK_SPLIT', 'OPTION_BUY', 'OPTION_SELL', 'OPTION_EXPIRE', 'OPTION_ASSIGN', 'BOND_COUPON', 'BOND_MATURITY', name='transaction_type_enum'), nullable=False),
    sa.Column('transaction_time', sa.DateTime(timezone=True), nullable=False),
    sa.Column('quantity', sa.Numeric(precision=24, scale=8), nullable=True),
    sa.Column('price_per_unit', sa.Numeric(precision=18, scale=8), nullable=True),
    sa.Column('commission', sa.Numeric(precision=12, scale=4), nullable=True),
    sa.Column('fees', sa.Numeric(precision=12, scale=4), nullable=True),
    sa.Column('currency', sa.String(length=3), nullable=False),
    sa.Column('strategy_tag', sa.String(length=50), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['account_id'], ['accounts.id'], ),
    sa.ForeignKeyConstraint(['asset_id'], ['assets.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('transactions', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_transactions_account_id'), ['account_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_transactions_asset_id'), ['asset_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_transactions_strategy_tag'), ['strategy_tag'], unique=False)
        batch_op.create_index(batch_op.f('ix_transactions_transaction_time'), ['transaction_time'], unique=False)
        batch_op.create_index(batch_op.f('ix_transactions_transaction_type'), ['transaction_type'], unique=False)

    op.create_table('lots',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('account_id', sa.Integer(), nullable=False),
    sa.Column('asset_id', sa.Integer(), nullable=True),
    sa.Column('buy_transaction_id', sa.Integer(), nullable=False),
    sa.Column('purchase_date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('purchase_quantity', sa.Numeric(precision=24, scale=8), nullable=False),
    sa.Column('quantity_remaining', sa.Numeric(precision=24, scale=8), nullable=False),
    sa.Column('cost_basis_per_unit', sa.Numeric(precision=18, scale=8), nullable=False),
    sa.Column('is_open', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('closed_at', sa.DateTime(timezone=True), nullable=True),
    sa.CheckConstraint('quantity_remaining <= purchase_quantity', name='ck_lot_quantity_remaining_lte_purchase'),
    sa.CheckConstraint('quantity_remaining >= 0', name='ck_lot_quantity_remaining_non_negative'),
    sa.ForeignKeyConstraint(['account_id'], ['accounts.id'], ),
    sa.ForeignKeyConstraint(['asset_id'], ['assets.id'], ),
    sa.ForeignKeyConstraint(['buy_transaction_id'], ['transactions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('lots', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_lots_account_id'), ['account_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_lots_asset_id'), ['asset_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_lots_buy_transaction_id'), ['buy_transaction_id'], unique=True)
        batch_op.create_index(batch_op.f('ix_lots_closed_at'), ['closed_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_lots_is_open'), ['is_open'], unique=False)
        batch_op.create_index(batch_op.f('ix_lots_purchase_date'), ['purchase_date'], unique=False)
        batch_op.create_index(batch_op.f('ix_lots_quantity_remaining'), ['quantity_remaining'], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('lots', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_lots_quantity_remaining'))
        batch_op.drop_index(batch_op.f('ix_lots_purchase_date'))
        batch_op.drop_index(batch_op.f('ix_lots_is_open'))
        batch_op.drop_index(batch_op.f('ix_lots_closed_at'))
        batch_op.drop_index(batch_op.f('ix_lots_buy_transaction_id'))
        batch_op.drop_index(batch_op.f('ix_lots_asset_id'))
        batch_op.drop_index(batch_op.f('ix_lots_account_id'))

    op.drop_table('lots')
    with op.batch_alter_table('transactions', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_transactions_transaction_type'))
        batch_op.drop_index(batch_op.f('ix_transactions_transaction_time'))
        batch_op.drop_index(batch_op.f('ix_transactions_strategy_tag'))
        batch_op.drop_index(batch_op.f('ix_transactions_asset_id'))
        batch_op.drop_index(batch_op.f('ix_transactions_account_id'))

    op.drop_table('transactions')
    with op.batch_alter_table('accounts', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_accounts_portfolio_id'))
        batch_op.drop_index(batch_op.f('ix_accounts_is_active'))
        batch_op.drop_index(batch_op.f('ix_accounts_currency'))
        batch_op.drop_index(batch_op.f('ix_accounts_account_type'))

    op.drop_table('accounts')
    with op.batch_alter_table('stocks', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_stocks_sector'))
        batch_op.drop_index(batch_op.f('ix_stocks_country'))

    op.drop_table('stocks')
    with op.batch_alter_table('portfolios', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_portfolios_user_id'))
        batch_op.drop_index(batch_op.f('ix_portfolios_benchmark_ticker'))
        batch_op.drop_index(batch_op.f('ix_portfolios_base_currency'))

    op.drop_table('portfolios')
    with op.batch_alter_table('option_contracts', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_option_contracts_underlying_asset_id'))
        batch_op.drop_index(batch_op.f('ix_option_contracts_expiration_date'))

    op.drop_table('option_contracts')
    with op.batch_alter_table('etfs', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_etfs_asset_class'))

    op.drop_table('etfs')
    op.drop_table('cryptocurrencies')
    op.drop_table('cash_currencies')
    with op.batch_alter_table('bonds', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_bonds_maturity_date'))

    op.drop_table('bonds')
    with op.batch_alter_table('assets', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_assets_symbol'))
        batch_op.drop_index(batch_op.f('ix_assets_exchange'))
        batch_op.drop_index(batch_op.f('ix_assets_currency'))
        batch_op.drop_index(batch_op.f('ix_assets_asset_type'))

    op.drop_table('assets')
    # ### end Alembic commands ###
